package music.chaanel.com.musicchannel.homepage.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import music.chaanel.com.musicchannel.homepage.beans.HomeDataBean;
import music.chaanel.com.musicchannel.homepage.beans.ArtistsBean;
import music.chaanel.com.musicchannel.homepage.beans.HomeWrapBean;
import music.chaanel.com.musicchannel.homepage.beans.HomeBean;

import music.chaanel.com.musicchannel.homepage.gen.HomeDataBeanDao;
import music.chaanel.com.musicchannel.homepage.gen.ArtistsBeanDao;
import music.chaanel.com.musicchannel.homepage.gen.HomeWrapBeanDao;
import music.chaanel.com.musicchannel.homepage.gen.HomeBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig homeDataBeanDaoConfig;
    private final DaoConfig artistsBeanDaoConfig;
    private final DaoConfig homeWrapBeanDaoConfig;
    private final DaoConfig homeBeanDaoConfig;

    private final HomeDataBeanDao homeDataBeanDao;
    private final ArtistsBeanDao artistsBeanDao;
    private final HomeWrapBeanDao homeWrapBeanDao;
    private final HomeBeanDao homeBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        homeDataBeanDaoConfig = daoConfigMap.get(HomeDataBeanDao.class).clone();
        homeDataBeanDaoConfig.initIdentityScope(type);

        artistsBeanDaoConfig = daoConfigMap.get(ArtistsBeanDao.class).clone();
        artistsBeanDaoConfig.initIdentityScope(type);

        homeWrapBeanDaoConfig = daoConfigMap.get(HomeWrapBeanDao.class).clone();
        homeWrapBeanDaoConfig.initIdentityScope(type);

        homeBeanDaoConfig = daoConfigMap.get(HomeBeanDao.class).clone();
        homeBeanDaoConfig.initIdentityScope(type);

        homeDataBeanDao = new HomeDataBeanDao(homeDataBeanDaoConfig, this);
        artistsBeanDao = new ArtistsBeanDao(artistsBeanDaoConfig, this);
        homeWrapBeanDao = new HomeWrapBeanDao(homeWrapBeanDaoConfig, this);
        homeBeanDao = new HomeBeanDao(homeBeanDaoConfig, this);

        registerDao(HomeDataBean.class, homeDataBeanDao);
        registerDao(ArtistsBean.class, artistsBeanDao);
        registerDao(HomeWrapBean.class, homeWrapBeanDao);
        registerDao(HomeBean.class, homeBeanDao);
    }
    
    public void clear() {
        homeDataBeanDaoConfig.clearIdentityScope();
        artistsBeanDaoConfig.clearIdentityScope();
        homeWrapBeanDaoConfig.clearIdentityScope();
        homeBeanDaoConfig.clearIdentityScope();
    }

    public HomeDataBeanDao getHomeDataBeanDao() {
        return homeDataBeanDao;
    }

    public ArtistsBeanDao getArtistsBeanDao() {
        return artistsBeanDao;
    }

    public HomeWrapBeanDao getHomeWrapBeanDao() {
        return homeWrapBeanDao;
    }

    public HomeBeanDao getHomeBeanDao() {
        return homeBeanDao;
    }

}
